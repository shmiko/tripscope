{"version":3,"file":"/packages/telescope-daily.js","sources":["telescope-daily/lib/daily.js","telescope-daily/lib/client/routes.js","telescope-daily/lib/client/templates/posts_daily.html","telescope-daily/lib/client/templates/posts_daily.js"],"names":[],"mappings":";;;;;;;;AAAA,c;AACA,sB;AACA,gB;AACA,G;;AAEA,yC;AACA,U;AACA,W;AACA,iB;AACA,yB;AACA,O;AACA,M;AACA,c;AACA,uD;AACA,c;AACA,K;AACA,I;AACA,C;;;;;;;;;;;;;;;;;;ACjBA,oB;;AAEA,yC;AACA,kC;AACA,iB;AACA,6C;AACA,c;AACA,G;;AAEA,qC;;AAEA,+C;AACA,wB;AACA,qC;AACA,I;AACA,6B;AACA,kE;AACA,2E;;AAEA,iB;AACA,oB;AACA,sB;AACA,yE;AACA,M;;AAEA,yF;AACA,uC;AACA,O;;AAEA,uF;;AAEA,I;AACA,oB;AACA,wC;AACA,Y;AACA,qB;AACA,M;AACA,G;AACA,G;;AAEA,4B;AACA,E;AACA,iC;AACA,uB;AACA,oC;AACA,K;;AAEA,G;;;;;;;;;;;;;;;;;;;AC9CA,mC;AACA,0E;AACA,kB;AACA,8B;AACA,sD;AACA,iB;AACA,iC;AACA,qB;AACA,0C;AACA,iD;AACA,mB;AACA,sC;AACA,oC;AACA,gC;AACA,wG;AACA,mC;AACA,iE;AACA,8C;AACA,oD;AACA,qB;AACA,0D;AACA,sD;AACA,uB;AACA,uE;AACA,oB;AACA,gE;AACA,c;AACA,yB;AACA,iD;AACA,wD;AACA,e;AACA,iC;AACA,6B;AACA,qB;AACA,2C;AACA,qC;AACA,8D;AACA,sC;AACA,4B;AACA,yC;AACA,wB;AACA,8D;AACA,O;AACA,wC;AACA,kE;AACA,8B;AACA,iB;AACA,iC;AACA,oC;AACA,0F;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;ACpDA,oB;;AAEA,gC;AACA,e;AACA,mB;AACA,gD;AACA,8C;AACA,I;AACA,6C;AACA,kG;AACA,sB;AACA,gB;AACA,K;AACA,e;AACA,C;;AAEA,4B;;AAEA,+C;AACA,8B;AACA,0C;AACA,M;AACA,4B;AACA,sC;AACA,M;AACA,uB;AACA,yB;AACA,8B;AACA,0C;AACA,kC;AACA,wB;AACA,oE;AACA,W;AACA,O;AACA,uB;AACA,M;AACA,wB;AACA,iC;AACA,M;AACA,8B;AACA,mE;AACA,+B;AACA,K;AACA,K;;AAEA,G","sourcesContent":["viewNav.push({\n  route: 'postsDaily',\n  label: 'Daily'\n});\n\nviewParameters.daily = function (terms) {\n  return {\n    find: {\n      postedAt: {\n        $gte: terms.after\n      }\n    },\n    options: {\n      sort: {createdAt: -1, sticky: -1, baseScore: -1},\n      limit: 0\n    }\n  };\n}","var daysPerPage = 5;\n\nvar coreSubscriptions = new SubsManager({\n  // cache recent 50 subscriptions\n  cacheLimit: 50,\n  // expire any subscription after 30 minutes\n  expireIn: 30\n});\n\n// note: FastRender not defined here?\n\nPostsDailyController = RouteController.extend({\n  template: function() {\n    return getTemplate('postsDaily');\n  },\n  subscriptions: function() {\n    this.days = this.params.days ? this.params.days : daysPerPage;\n    // this.days = Session.get('postsDays') ? Session.get('postsDays') : 3;\n\n    var terms = {\n      view: 'daily',\n      days: this.days,\n      after: moment().subtract(this.days, 'days').startOf('day').toDate()\n    };\n\n    this.postsSubscription = coreSubscriptions.subscribe('postsList', terms, function() {\n      Session.set('postsLoaded', true);\n    });\n\n    this.postsUsersSubscription = coreSubscriptions.subscribe('postsListUsers', terms);\n\n  },\n  data: function() {\n    Session.set('postsDays', this.days);\n    return {\n      days: this.days\n    };\n  }\n});\n\nMeteor.startup(function () {\n  \n  Router.route('/daily/:days?', {\n    name: 'postsDaily',\n    controller: PostsDailyController\n  });\n\n});","\nTemplate.__checkName(\"postsDaily\");\nTemplate[\"postsDaily\"] = new Template(\"Template.postsDaily\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"postsLoaded\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"grid\"\n    }, \"\\n      \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"days\"));\n    }, function() {\n      return [ \"\\n        \", HTML.H2({\n        \"class\": \"posts-day-heading\"\n      }, Blaze.View(function() {\n        return Spacebars.mustache(view.lookup(\"formatDate\"), view.lookup(\"date\"), \"dddd, MMMM Do YYYY\");\n      })), \"\\n        \", HTML.DIV({\n        \"class\": \"posts-wrapper posts-day posts list grid-module\"\n      }, \"\\n          \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"posts\"));\n      }, function() {\n        return [ \"\\n            \", Blaze.Each(function() {\n          return Spacebars.call(view.lookup(\"posts\"));\n        }, function() {\n          return [ \"\\n              \", Blaze._TemplateWith(function() {\n            return {\n              template: Spacebars.call(view.lookup(\"post_item\"))\n            };\n          }, function() {\n            return Spacebars.include(function() {\n              return Spacebars.call(Template.__dynamic);\n            });\n          }), \"\\n            \" ];\n        }), \"\\n          \" ];\n      }, function() {\n        return [ \"\\n            \", HTML.P({\n          \"class\": \"empty-day-notice\"\n        }, \"Sorry, no posts for that day.\"), \"\\n          \" ];\n      }), \"\\n        \"), \"\\n      \" ];\n    }), \"\\n      \", HTML.A({\n      \"class\": \"more-button grid-module\",\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"loadMoreUrl\"));\n      }\n    }, HTML.SPAN(Blaze.View(function() {\n      return Spacebars.mustache(view.lookup(\"i18n\"), \"Load more\");\n    }))), \"\\n    \"), \"\\n  \" ];\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"grid loading-module\"\n    }, \"\\n      \", Spacebars.include(view.lookupTemplate(\"spinner\")), \"\\n    \"), \"\\n  \" ];\n  });\n}));\n","var daysPerPage = 5;\n\nvar getPosts = function (date) {\n  var terms = {\n    view: 'digest',\n    after: moment(date).startOf('day').toDate(),\n    before: moment(date).endOf('day').toDate()\n  };\n  var parameters = getPostsParameters(terms);\n  var posts = Posts.find(parameters.find, parameters.options).map(function (post, index, cursor) {\n    post.rank = index;\n    return post;\n  });\n  return posts;\n}\n\nMeteor.startup(function () {\n\n  Template[getTemplate('postsDaily')].helpers({\n    postsLoaded: function () {\n      return !!Session.get('postsLoaded');\n    },\n    post_item: function () {\n      return getTemplate('post_item');\n    },\n    days: function () {\n      var daysArray = [];\n      // var days = this.days;\n      var days = Session.get('postsDays');\n      for (i = 0; i < days; i++) {\n        daysArray.push({\n          date: moment().subtract(i, 'days').startOf('day').toDate()\n        });\n      }\n      return daysArray;\n    },\n    posts: function () {\n      return getPosts(this.date);\n    },\n    loadMoreUrl: function () {\n      var count = parseInt(Session.get('postsDays')) + daysPerPage;\n      return '/daily/' + count;\n    }\n  });\n\n});\n"]}